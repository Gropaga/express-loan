version: '3'
services:
  nginx:
    image: nginx:latest
    ports:
      - "3000:3000"
    links:
      - backend
    volumes:
          - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
  backend:
    container_name: backend
    image: node:8
    volumes:
      - ./src:/usr/src/app
      - ./logs:/root/.npm/_logs
    links:
      - redis
    working_dir: /usr/src/app
    environment:
        - REDIS_URL=redis://cache
    command: >
               bash -c "ls -lt &&
               pwd &&
               npm start"
  redis:
    container_name: cache
    image: redis:5
    expose:
      - 6379
    volumes:
      - ./data/redis:/data
    restart: always

#  front:
#      image: nginx:latest
#      ports:
#        - "88:80"
#      volumes:
#        - ./bin:/bin
#        - ./src/web/app/uploads:/images
#        - ./src/web/app/cache:/json
#        - ./site-front.conf:/etc/nginx/conf.d/default.conf
#  back:
#    image: nginx:latest
#    ports:
#      - "8080:80"
#    volumes:
#      - ./src/web:/src/web
#      - ./site-back.conf:/etc/nginx/conf.d/default.conf
#    links:
#      - php
#  php:
#      build:
#        context: .
#        dockerfile: Dockerfile-php
#      volumes:
#        - ./src/web:/src/web
#        - ./src:/src
#  mysql:
#      image: mysql:5
#      volumes:
#        - "./data/db:/var/lib/mysql"
#      restart: always
#      ports:
#        - "3306:3306"
#      environment:
#        MYSQL_ROOT_PASSWORD: password
#        MYSQL_DATABASE: wordpress
#        MYSQL_USER: wordpress
#        MYSQL_PASSWORD: password
#  composer:
#      image: composer
#      command: ["update","install"]
#      volumes:
#        - "./src:/app"